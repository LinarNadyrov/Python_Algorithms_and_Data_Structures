#!/usr/bin/python3
# coding: utf-8
# Сделано не правильно!

''' Подсчитать, сколько было выделено памяти под переменные в ранее разработанных программах в 
рамках первых трех уроков. Проанализировать результат и определить программы с наиболее эффективным 
использованием памяти.
Примечание: По аналогии с эмпирической оценкой алгоритмов идеальным решением будет:
a. выбрать хорошую задачу, которую имеет смысл оценивать по памяти;
b. написать 3 варианта кода (один у вас уже есть);
проанализировать 3 варианта и выбрать оптимальный;
c. результаты анализа (количество занятой памяти в вашей среде разработки) вставить в виде комментариев 
в файл с кодом. Не забудьте указать версию и разрядность вашей ОС и интерпретатора Python;
d. написать общий вывод: какой из трёх вариантов лучше и почему.
Надеемся, что вы не испортили программы, добавив в них множество sys.getsizeof после каждой переменной, 
а проявили творчество, фантазию и создали универсальный код для замера памяти. '''

'''Вводятся три разных числа. 
Найти, какое из них является средним (больше одного, но меньше другого). ''' 

import sys

print(sys.version, sys.platform)

## ВАРИАНТ №1
def average_number1(a, b, c): 
    if b < a < c or c < a < b: 
        return print('среднее число:', a) 
    elif a < b < c or c < b < a:
        return print('среднее число:', b)
    else: 
        return print('среднее число:', c)

## ВАРИАНТ №2
def average_number2(a, b, c): 
    if b > a and a > c or c > a and a > b:
        return print('среднее число:', a) 
    if a > b and b > c or c > b and b > a: 
        return print('среднее число:', b)
    if a > c and c > b or b > c and c > a: 
        return print('среднее число:', c)


# print ('Введите пожалуйста три числа а b c : ')
# a = int(input())
# b = int(input())
# c = int(input())
# print('Выделено памяти = ', sys.getsizeof(average_number1(a, b, c)))
# print('Выделено памяти = ', sys.getsizeof(average_number2(a, b, c)))

## ВАРИАНТ №3
arr = []  # заводим пустой список
n = 3     # длина массива
print ('Введите пожалуйста три числа а b c : ')
for i in range(n):  
    arr.append(int(input()))
print(arr)
arr = sorted(arr)
if arr[1] != max(arr) and arr[1] != min(arr):
    print('среднее число:', arr[1])
    print('Выделено памяти =', sys.getsizeof(arr[1]))
else: 
    print('среднее число:', arr[1])
    print('Выделено памяти =', sys.getsizeof(arr[1]))

# 3.6.0 (v3.6.0:41df79263a11, Dec 22 2016, 17:23:13) 
# [GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] darwin

# В первом и во втором варианте выделено памяти = 16 байт
# В третьем варианте  выделено памяти = 28 байт
# Использование массива увеличивает размер потребляемой памяти